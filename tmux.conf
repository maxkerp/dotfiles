
#---------------- General


# Use zsh
set-option -g default-shell /usr/bin/zsh

# Setting the prefix from C-b to C-a
set -g prefix C-s
set -g prefix2 C-s

# Ensure we can send C-s to the underlying program
bind-key C-s send-prefix -2

# Free the original Ctrl-b prefix keybinding
unbind C-b

# Ensure that we can send Ctrl-A to other apps
# bind C-a send-prefix

# Setting the delay between prefix and command
set -s escape-time 1

# Reload the file with Prefix r
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Increase scrollback lines
set -g history-limit 10000

# Don't suspend-client
unbind-key C-z

# Don't detach from session
unbind-key d

# Enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# Update the status bar every sixty seconds
set -g status-interval 60


#---------------- Appearance


# Use true color if available in terminal emulator
set -sa terminal-overrides ",xterm*:Tc"

# Improve colors
set -g default-terminal 'screen-256color'

# Start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# Renumber windows sequentially after closing any of them
set -g renumber-windows on

# Soften status bar color from harsh green to light gray
set -g status-style bg='#666666',fg='#aaaaaa'

# Remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
set -g status-right ''


#---------------- Navigation


# Quick window selection
bind -n C-x select-window -t :+
bind -n C-q select-window -t :-

# Splitting panes
bind / split-window -h
bind - split-window -v

# Pane resizing
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Also correctly move in copy-mode
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# Break out pane to its own window, stay in current
bind-key b break-pane -d

# Quick session selection
bind C-j split-window -v -p 15 "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message p '#S')\$\" | fzf  --height=20% --color=16 --reverse | xargs tmux switch-client -t"

# Create session (?)
bind-key C-b send-keys 'tat && exit' 'C-m'

# Kill session
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'


#---------------- Working with text


# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection

# Yank with 'y' but don't leave visual mode
bind-key -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"


#---------------- Utilities


bind-key h split-window -h "htop"
bind-key t split-window -h -c ~/ "nvim todo.md"


# Unbind l to jump between two last windows. Use it to clear the screen
unbind l
bind l send-keys 'C-l'

#---------------- Overrides


# Load theme last
if-shell "[ -f ~/.tmux/theme.conf ]" 'source ~/.tmux/theme.conf'
